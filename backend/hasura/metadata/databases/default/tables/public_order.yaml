table:
  name: order
  schema: public
object_relationships:
  - name: buyer
    using:
      foreign_key_constraint_on: buyer_id
  - name: p_options
    using:
      foreign_key_constraint_on: o_id
array_relationships:
  - name: in_travels
    using:
      foreign_key_constraint_on:
        column: o_id
        table:
          name: in_travel
          schema: public
insert_permissions:
  - role: buyer
    permission:
      check: {}
      set:
        buyer_id: x-hasura-User-Id
      columns:
        - buyer_id
        - created_at
        - id
        - o_id
        - payed
        - updated_at
select_permissions:
  - role: buyer
    permission:
      columns:
        - payed
        - buyer_id
        - id
        - o_id
        - created_at
        - updated_at
      filter: {}
  - role: seller
    permission:
      columns:
        - payed
        - buyer_id
        - id
        - o_id
        - reference_id
        - created_at
        - updated_at
      filter:
        p_options:
          products:
            owner:
              _eq: X-Hasura-User-Id
update_permissions:
  - role: seller
    permission:
      columns:
        - payed
        - buyer_id
        - id
        - o_id
        - reference_id
        - created_at
        - updated_at
      filter:
        p_options:
          products:
            owner:
              _eq: X-Hasura-User-Id
      check:
        p_options:
          products:
            owner:
              _eq: X-Hasura-User-Id
delete_permissions:
  - role: seller
    permission:
      backend_only: false
      filter:
        p_options:
          products:
            owner:
              _eq: X-Hasura-User-Id
event_triggers:
  - name: payment
    definition:
      enable_manual: false
      insert:
        columns: '*'
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: http://host.docker.internal:4000/event/payment
