import{m as i,p as o,q as r,s as c,x as n,y as l,z as u}from"./index.3c5f2394.js";u(o);const p=i("product",{state:()=>({product_name:"",about_product:"",options:[],o_name:"",price:"",c_id:"",sub_category_id:"",difference:"",categories:[],subcategories:[],options:[],image_url:[],base64str:"",type:"",f_name:"",ObjectFile:[],file:"",adding_product:!1,adding_option:!1}),actions:{async products(){},async insert_product(){try{await this.add_options();const t=o.mutate({mutation:r,variables:{name:this.product_name,about_product:this.about_product,category_id:this.c_id,data:this.options,sub_category_id:this.sub_category_id}});console.log(t)}catch(t){return console.log(t),t.message}},async category(){const{data:t}=await o.query({query:c});return this.categories=t.category,console.log(this.categories),this.categories},async subcategory(t){const{data:e}=await o.query({query:n});console.log(e),this.subcategories=e.sub_category,console.log(this.subcategories)},async add_image(){console.log("on loop");for(let s=0;s<this.ObjectFile.length;s++){console.log("inside a loop"+this.ObjectFile[s]);var t=this.ObjectFile[s];console.log(t);try{var e=await g(t);this.image_url.push(e),console.log(e)}catch(a){console.log(a)}}},async add_options(){await this.add_image(),console.log("this is url testing"+this.image_url),this.options.push({image_url:this.image_url.join(),name:this.o_name,price:this.price,difference:this.difference}),console.log("this options testing if it is working"+this.options),this.ObjectFile=[],this.image_url=[]}},getters:{}}),g=async t=>{try{const e=await o.mutate({mutation:l,variables:{name:t.file.name,type:t.file.type,base64str:t.base64str}});return console.log(e.data.fileupload.file_path),e.data.fileupload.file_path}catch{}};export{p as P};
